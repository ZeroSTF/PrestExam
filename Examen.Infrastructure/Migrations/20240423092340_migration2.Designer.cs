// <auto-generated />
using System;
using Examen.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Examen.Infrastructure.Migrations
{
    [DbContext(typeof(ExamContext))]
    [Migration("20240423092340_migration2")]
    partial class migration2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Affectation", b =>
                {
                    b.Property<string>("MannequinId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("DefileId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateEnvoi")
                        .HasColumnType("datetime2");

                    b.Property<int>("Etat")
                        .HasColumnType("int");

                    b.HasKey("MannequinId", "DefileId", "Id");

                    b.HasIndex("DefileId");

                    b.ToTable("Affectations");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Article", b =>
                {
                    b.Property<int>("ArticleCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArticleCode"));

                    b.Property<string>("Couleur")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("DefileFK")
                        .HasColumnType("int");

                    b.Property<string>("Matiere")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float>("PrixUnitaireFabrication")
                        .HasColumnType("real");

                    b.Property<float>("PrixUnitaireVente")
                        .HasColumnType("real");

                    b.Property<int>("nbAccessoires")
                        .HasColumnType("int");

                    b.HasKey("ArticleCode");

                    b.HasIndex("DefileFK");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Defile", b =>
                {
                    b.Property<int>("DefileCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DefileCode"));

                    b.Property<DateTime>("DateEvennement")
                        .HasColumnType("datetime2");

                    b.Property<int>("Duree")
                        .HasColumnType("int");

                    b.Property<string>("Lieu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("StylisteFK")
                        .HasColumnType("int");

                    b.HasKey("DefileCode");

                    b.HasIndex("StylisteFK");

                    b.ToTable("Defiles");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Mannequin", b =>
                {
                    b.Property<string>("CIN")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("NumContract")
                        .HasColumnType("int");

                    b.Property<float>("Poid")
                        .HasColumnType("real");

                    b.Property<float>("PrixParHeure")
                        .HasColumnType("real");

                    b.Property<float>("Taille")
                        .HasColumnType("real");

                    b.HasKey("CIN");

                    b.ToTable("Mannequins");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.StylisteModeliste", b =>
                {
                    b.Property<int>("StylistCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StylistCode"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Telephone")
                        .HasColumnType("int");

                    b.HasKey("StylistCode");

                    b.ToTable("StylisteModelistes");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Affectation", b =>
                {
                    b.HasOne("Examen.ApplicationCore.Domain.Defile", "MyDefile")
                        .WithMany("Affectations")
                        .HasForeignKey("DefileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Examen.ApplicationCore.Domain.Mannequin", "MyMannequin")
                        .WithMany("Affectations")
                        .HasForeignKey("MannequinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MyDefile");

                    b.Navigation("MyMannequin");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Article", b =>
                {
                    b.HasOne("Examen.ApplicationCore.Domain.Defile", "Defile")
                        .WithMany("Articles")
                        .HasForeignKey("DefileFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Defile");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Defile", b =>
                {
                    b.HasOne("Examen.ApplicationCore.Domain.StylisteModeliste", "StylisteModeliste")
                        .WithMany("Defiles")
                        .HasForeignKey("StylisteFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StylisteModeliste");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Defile", b =>
                {
                    b.Navigation("Affectations");

                    b.Navigation("Articles");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Mannequin", b =>
                {
                    b.Navigation("Affectations");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.StylisteModeliste", b =>
                {
                    b.Navigation("Defiles");
                });
#pragma warning restore 612, 618
        }
    }
}
